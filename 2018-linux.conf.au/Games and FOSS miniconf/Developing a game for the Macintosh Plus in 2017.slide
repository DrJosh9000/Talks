Developing a game for the Macintosh Plus in 2017
Games and FOSS Miniconf, linux.conf.au 2018
11:35 21 Jan 2018
Tags: games, foss, miniconf, vintage, macintosh, C, retro68, retro, hypercard

Josh Deprez
Site Reliability Engineer, Google Australia
josh.deprez@gmail.com
https://github.com/DrJosh9000/Talks
@DrJosh9000

: Hello, welcome to my talk, etc

* Why?

* Mostly because...

.image macplus.jpg _ 600
.caption Macintosh Plus. Photo: J. Deprez

: Because I happen to have some heritage Macs lying around.

* Why else?

- Make new use of old hardware (retrocomputing)
- Massive portability (via emulators)
- Because I can
- Motorola 68000 CPU predates Meltdown & Spectre ;-)

* Okay, why not?

* The limiting hardware

: Reason 1: the hardware is limited by modern standards, though perhaps not limited relative to embedded work. Expect a slow CPU, no more than 4 MB of RAM, a small monochrome display, basic sound output, and no internet access.

.image macpaint.jpg _ 600
.caption The gorgeous 9 inch, 512 x 384 display of an early Macintosh. Photo & Art: J. Deprez

* Accessibility issues

.image keyboard.jpg _ 600
.caption Keyboard forever! Photo & Keyboard repair: J. Deprez

: Reason 2: Whether you are deploying to an emulator or to the real thing, the early Macintoshes were built almost entirely upon "state-of-the-art" mouse and keyboard input modality. Modern systems can be more accessible, with though this is often untrue of games.

* Toolchain?

.image mpw.png _ 600
.caption Macintosh Programmers Workshop, running under Mini vMac.

: Reason 3: You *want* to code in Macintosh Programmers Workshop? Fortunately, you don't have to.

* Option 1: HyperCard

.image hypercard.png _ 600
.caption HyperCard - the original Twine?

* Option 2: Something something C

: This is the one I'm going to talk about mostly, because HyperCard is largely dead.

* Getting Started

* Ingredients

Modern computer, compiler & toolchain. For this talk: [[https://github.com/autc04/Retro68][Retro68]].

: If you don't like modern C / C++11, there's always ASM, or Pascal, or old C with the original Macintosh Programmers Workshop...I guess?

Retro68 needs: Apple's legacy "Universal Interfaces"

- Can be extracted from (free, abandonware) Macintosh Programmers Workshop...
- [[https://storage.googleapis.com/awkward/InterfacesAndLibraries.zip][...or found online, somewhere.]]

* Recommended extras (1/2)

68k Macintosh emulator - strongly recommended for rapid development. 
Options (all open source!):

- [[http://www.gryphel.com/c/minivmac/index.html][Mini vMac]] (recommended!)
- [[http://www.hampa.ch/pce/][PCE]]
- [[https://basilisk.cebix.net/][Basilisk II]] (no longer maintained)
- Write & release your own?

.image minivmac.png _ 250

: Why a Mac emulator if you have the real thing?
: Copying even very small files onto vintage hardware can be tedious - either via floppy disk or networking.
: Fortunately, if your program runs correctly on Mini vMac, it's almost certainly going to work on the real thing. 

* Recommended extras (2/2)

Macintosh Plus ROM file and system software to make the emulator go.

ROM file: _Required_ for emulation, but has never been made available for free.

- [[https://github.com/macmade/Macintosh-ROMs][Easy to find...]]
- [[http://www.gryphel.com/c/minivmac/extras/copyroms/][Can be dumped from original hardware.]]

System 6: *was* freely available from Apple, now abandonware, seemingly.

- Try [[http://macintoshgarden.org][Macintosh Garden]].

Utilities of the era (more abandonware)

- ResEdit, MacPaint, ClarisWorks

* How to Retro68

* Retro68

It's GCC, essentially - with some extras:

- libretro (part of the magic)
- ResourceFiles & Rez
- MakeAPPL, LaunchAPPL

Now supports Ninja in addition to Cmake!

* Demo time!

* Notes

* MacPaint and QuickDraw are open source*

Sort of. Available from the [[http://www.computerhistory.org/atchm/macpaint-and-quickdraw-source-code/][Computer History Museum]]. _"This_Material_is_Copyright_Â©_1984_Apple_Inc._and_is_made_available_only_for_non-commercial_use."_

* Mac-era Games

- [[https://github.com/softdorothy/glider_4][Glider]], [[https://github.com/softdorothy/pararena_2][Pararena]], [[https://github.com/softdorothy/glypha_III][Glypha]] - open source!